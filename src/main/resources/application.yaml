spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USER}
    password: ${DB_PASSWORD}
  jpa:
    properties:
      hibernate:
        jdbc:
          lob:
            # Workaround for an error with postgres and hibernate
            non_contextual_creation: true
        format_sql: true
    generate-ddl: true
    database-platform: org.hibernate.dialect.PostgreSQL94Dialect
  # Below 2 are required to handle 404 with controller advice
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: false
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_OAUTH_CLIENT_ID}
            clientSecret: ${GOOGLE_OAUTH_CLIENT_SECRET}
            redirectUri: "{baseUrl}/api/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile

server:
  servlet:
    session:
      tracking-modes: cookie

# Below 2 are for printing sql queries and there parameters
logging:
  level:
    org:
      hibernate:
        SQL: debug
        type:
          descriptor:
            sql:
              BasicBinder: trace

jwt:
  auth:
    tokenSecret: ${JWT_TOKEN_SECRET}
    tokenExpirationMSec: 864000000
  oauth2:
    authorizedRedirectUris: ${JWT_AUTHORIZED_REDIRECT_URIS}